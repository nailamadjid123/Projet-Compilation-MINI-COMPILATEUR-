 Terminals unused in grammar

    NOT


State 83 conflicts: 2 shift/reduce
State 84 conflicts: 2 shift/reduce
State 86 conflicts: 4 shift/reduce
State 87 conflicts: 4 shift/reduce
State 88 conflicts: 4 shift/reduce
State 89 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: VAR_GLOBAL '{' declaration_block '}' instruction_block

    2 declaration_block: DECLARATION '{' declarations '}'

    3 declarations: ε
    4             | declarations declaration

    5 declaration: type var_list ';'
    6            | CONST type IDENTIFIER '=' constant_value ';'

    7 type: INTEGER
    8     | FLOAT
    9     | CHAR

   10 var_list: IDENTIFIER
   11         | var_list ',' IDENTIFIER

   12 constant_value: INTEGER_CONSTANT
   13               | FLOAT_CONSTANT
   14               | STRING_LITERAL

   15 instruction_block: INSTRUCTION '{' instructions '}'

   16 instructions: ε
   17             | instructions instruction

   18 instruction: IDENTIFIER '=' expression ';'
   19            | IF '(' condition ')' '{' instructions '}' else_part
   20            | FOR '(' IDENTIFIER '=' expression ':' expression ':' expression ')' '{' instructions '}'
   21            | READ '(' IDENTIFIER ')'
   22            | WRITE '(' write_params ')'

   23 else_part: ε
   24          | ELSE '{' instructions '}'

   25 write_params: STRING_LITERAL
   26             | IDENTIFIER
   27             | write_params ',' STRING_LITERAL
   28             | write_params ',' IDENTIFIER

   29 condition: expression relational_operator expression
   30          | '(' condition ')'
   31          | condition AND condition
   32          | condition OR condition

   33 relational_operator: EQUAL
   34                    | NOT_EQUAL
   35                    | LESS_EQUAL
   36                    | GREATER_EQUAL
   37                    | GREATER
   38                    | LESS

   39 expression: INTEGER_CONSTANT
   40           | FLOAT_CONSTANT
   41           | IDENTIFIER
   42           | expression '+' expression
   43           | expression '-' expression
   44           | expression '*' expression
   45           | expression '/' expression
   46           | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 19 20 21 22 30 46
    ')' (41) 19 20 21 22 30 46
    '*' (42) 44
    '+' (43) 42
    ',' (44) 11 27 28
    '-' (45) 43
    '/' (47) 45
    ':' (58) 20
    ';' (59) 5 6 18
    '=' (61) 6 18 20
    '{' (123) 1 2 15 19 20 24
    '}' (125) 1 2 15 19 20 24
    error (256)
    VAR_GLOBAL (258) 1
    DECLARATION (259) 2
    INSTRUCTION (260) 15
    INTEGER (261) 7
    FLOAT (262) 8
    CHAR (263) 9
    CONST (264) 6
    IF (265) 19
    ELSE (266) 24
    FOR (267) 20
    READ (268) 21
    WRITE (269) 22
    AND (270) 31
    OR (271) 32
    NOT (272)
    EQUAL (273) 33
    NOT_EQUAL (274) 34
    LESS_EQUAL (275) 35
    GREATER_EQUAL (276) 36
    GREATER (277) 37
    LESS (278) 38
    INTEGER_CONSTANT (279) 12 39
    FLOAT_CONSTANT (280) 13 40
    STRING_LITERAL (281) 14 25 27
    IDENTIFIER (282) 6 10 11 18 20 21 26 28 41


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program (41)
        on left: 1
        on right: 0
    declaration_block (42)
        on left: 2
        on right: 1
    declarations (43)
        on left: 3 4
        on right: 2 4
    declaration (44)
        on left: 5 6
        on right: 4
    type (45)
        on left: 7 8 9
        on right: 5 6
    var_list (46)
        on left: 10 11
        on right: 5 11
    constant_value (47)
        on left: 12 13 14
        on right: 6
    instruction_block (48)
        on left: 15
        on right: 1
    instructions (49)
        on left: 16 17
        on right: 15 17 19 20 24
    instruction (50)
        on left: 18 19 20 21 22
        on right: 17
    else_part (51)
        on left: 23 24
        on right: 19
    write_params (52)
        on left: 25 26 27 28
        on right: 22 27 28
    condition (53)
        on left: 29 30 31 32
        on right: 19 30 31 32
    relational_operator (54)
        on left: 33 34 35 36 37 38
        on right: 29
    expression (55)
        on left: 39 40 41 42 43 44 45 46
        on right: 18 20 29 42 43 44 45 46


State 0

    0 $accept: • program $end

    VAR_GLOBAL  shift, and go to state 1

    program  go to state 2


State 1

    1 program: VAR_GLOBAL • '{' declaration_block '}' instruction_block

    '{'  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: VAR_GLOBAL '{' • declaration_block '}' instruction_block

    DECLARATION  shift, and go to state 5

    declaration_block  go to state 6


State 4

    0 $accept: program $end •

    $default  accept


State 5

    2 declaration_block: DECLARATION • '{' declarations '}'

    '{'  shift, and go to state 7


State 6

    1 program: VAR_GLOBAL '{' declaration_block • '}' instruction_block

    '}'  shift, and go to state 8


State 7

    2 declaration_block: DECLARATION '{' • declarations '}'

    $default  reduce using rule 3 (declarations)

    declarations  go to state 9


State 8

    1 program: VAR_GLOBAL '{' declaration_block '}' • instruction_block

    INSTRUCTION  shift, and go to state 10

    instruction_block  go to state 11


State 9

    2 declaration_block: DECLARATION '{' declarations • '}'
    4 declarations: declarations • declaration

    INTEGER  shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    CONST    shift, and go to state 15
    '}'      shift, and go to state 16

    declaration  go to state 17
    type         go to state 18


State 10

   15 instruction_block: INSTRUCTION • '{' instructions '}'

    '{'  shift, and go to state 19


State 11

    1 program: VAR_GLOBAL '{' declaration_block '}' instruction_block •

    $default  reduce using rule 1 (program)


State 12

    7 type: INTEGER •

    $default  reduce using rule 7 (type)


State 13

    8 type: FLOAT •

    $default  reduce using rule 8 (type)


State 14

    9 type: CHAR •

    $default  reduce using rule 9 (type)


State 15

    6 declaration: CONST • type IDENTIFIER '=' constant_value ';'

    INTEGER  shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14

    type  go to state 20


State 16

    2 declaration_block: DECLARATION '{' declarations '}' •

    $default  reduce using rule 2 (declaration_block)


State 17

    4 declarations: declarations declaration •

    $default  reduce using rule 4 (declarations)


State 18

    5 declaration: type • var_list ';'

    IDENTIFIER  shift, and go to state 21

    var_list  go to state 22


State 19

   15 instruction_block: INSTRUCTION '{' • instructions '}'

    $default  reduce using rule 16 (instructions)

    instructions  go to state 23


State 20

    6 declaration: CONST type • IDENTIFIER '=' constant_value ';'

    IDENTIFIER  shift, and go to state 24


State 21

   10 var_list: IDENTIFIER •

    $default  reduce using rule 10 (var_list)


State 22

    5 declaration: type var_list • ';'
   11 var_list: var_list • ',' IDENTIFIER

    ';'  shift, and go to state 25
    ','  shift, and go to state 26


State 23

   15 instruction_block: INSTRUCTION '{' instructions • '}'
   17 instructions: instructions • instruction

    IF          shift, and go to state 27
    FOR         shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '}'         shift, and go to state 32

    instruction  go to state 33


State 24

    6 declaration: CONST type IDENTIFIER • '=' constant_value ';'

    '='  shift, and go to state 34


State 25

    5 declaration: type var_list ';' •

    $default  reduce using rule 5 (declaration)


State 26

   11 var_list: var_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 35


State 27

   19 instruction: IF • '(' condition ')' '{' instructions '}' else_part

    '('  shift, and go to state 36


State 28

   20 instruction: FOR • '(' IDENTIFIER '=' expression ':' expression ':' expression ')' '{' instructions '}'

    '('  shift, and go to state 37


State 29

   21 instruction: READ • '(' IDENTIFIER ')'

    '('  shift, and go to state 38


State 30

   22 instruction: WRITE • '(' write_params ')'

    '('  shift, and go to state 39


State 31

   18 instruction: IDENTIFIER • '=' expression ';'

    '='  shift, and go to state 40


State 32

   15 instruction_block: INSTRUCTION '{' instructions '}' •

    $default  reduce using rule 15 (instruction_block)


State 33

   17 instructions: instructions instruction •

    $default  reduce using rule 17 (instructions)


State 34

    6 declaration: CONST type IDENTIFIER '=' • constant_value ';'

    INTEGER_CONSTANT  shift, and go to state 41
    FLOAT_CONSTANT    shift, and go to state 42
    STRING_LITERAL    shift, and go to state 43

    constant_value  go to state 44


State 35

   11 var_list: var_list ',' IDENTIFIER •

    $default  reduce using rule 11 (var_list)


State 36

   19 instruction: IF '(' • condition ')' '{' instructions '}' else_part

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 48

    condition   go to state 49
    expression  go to state 50


State 37

   20 instruction: FOR '(' • IDENTIFIER '=' expression ':' expression ':' expression ')' '{' instructions '}'

    IDENTIFIER  shift, and go to state 51


State 38

   21 instruction: READ '(' • IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 52


State 39

   22 instruction: WRITE '(' • write_params ')'

    STRING_LITERAL  shift, and go to state 53
    IDENTIFIER      shift, and go to state 54

    write_params  go to state 55


State 40

   18 instruction: IDENTIFIER '=' • expression ';'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 57


State 41

   12 constant_value: INTEGER_CONSTANT •

    $default  reduce using rule 12 (constant_value)


State 42

   13 constant_value: FLOAT_CONSTANT •

    $default  reduce using rule 13 (constant_value)


State 43

   14 constant_value: STRING_LITERAL •

    $default  reduce using rule 14 (constant_value)


State 44

    6 declaration: CONST type IDENTIFIER '=' constant_value • ';'

    ';'  shift, and go to state 58


State 45

   39 expression: INTEGER_CONSTANT •

    $default  reduce using rule 39 (expression)


State 46

   40 expression: FLOAT_CONSTANT •

    $default  reduce using rule 40 (expression)


State 47

   41 expression: IDENTIFIER •

    $default  reduce using rule 41 (expression)


State 48

   30 condition: '(' • condition ')'
   46 expression: '(' • expression ')'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 48

    condition   go to state 59
    expression  go to state 60


State 49

   19 instruction: IF '(' condition • ')' '{' instructions '}' else_part
   31 condition: condition • AND condition
   32          | condition • OR condition

    AND  shift, and go to state 61
    OR   shift, and go to state 62
    ')'  shift, and go to state 63


State 50

   29 condition: expression • relational_operator expression
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    EQUAL          shift, and go to state 64
    NOT_EQUAL      shift, and go to state 65
    LESS_EQUAL     shift, and go to state 66
    GREATER_EQUAL  shift, and go to state 67
    GREATER        shift, and go to state 68
    LESS           shift, and go to state 69
    '+'            shift, and go to state 70
    '-'            shift, and go to state 71
    '*'            shift, and go to state 72
    '/'            shift, and go to state 73

    relational_operator  go to state 74


State 51

   20 instruction: FOR '(' IDENTIFIER • '=' expression ':' expression ':' expression ')' '{' instructions '}'

    '='  shift, and go to state 75


State 52

   21 instruction: READ '(' IDENTIFIER • ')'

    ')'  shift, and go to state 76


State 53

   25 write_params: STRING_LITERAL •

    $default  reduce using rule 25 (write_params)


State 54

   26 write_params: IDENTIFIER •

    $default  reduce using rule 26 (write_params)


State 55

   22 instruction: WRITE '(' write_params • ')'
   27 write_params: write_params • ',' STRING_LITERAL
   28             | write_params • ',' IDENTIFIER

    ','  shift, and go to state 77
    ')'  shift, and go to state 78


State 56

   46 expression: '(' • expression ')'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 79


State 57

   18 instruction: IDENTIFIER '=' expression • ';'
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    ';'  shift, and go to state 80
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 58

    6 declaration: CONST type IDENTIFIER '=' constant_value ';' •

    $default  reduce using rule 6 (declaration)


State 59

   30 condition: '(' condition • ')'
   31          | condition • AND condition
   32          | condition • OR condition

    AND  shift, and go to state 61
    OR   shift, and go to state 62
    ')'  shift, and go to state 81


State 60

   29 condition: expression • relational_operator expression
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression
   46           | '(' expression • ')'

    EQUAL          shift, and go to state 64
    NOT_EQUAL      shift, and go to state 65
    LESS_EQUAL     shift, and go to state 66
    GREATER_EQUAL  shift, and go to state 67
    GREATER        shift, and go to state 68
    LESS           shift, and go to state 69
    ')'            shift, and go to state 82
    '+'            shift, and go to state 70
    '-'            shift, and go to state 71
    '*'            shift, and go to state 72
    '/'            shift, and go to state 73

    relational_operator  go to state 74


State 61

   31 condition: condition AND • condition

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 48

    condition   go to state 83
    expression  go to state 50


State 62

   32 condition: condition OR • condition

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 48

    condition   go to state 84
    expression  go to state 50


State 63

   19 instruction: IF '(' condition ')' • '{' instructions '}' else_part

    '{'  shift, and go to state 85


State 64

   33 relational_operator: EQUAL •

    $default  reduce using rule 33 (relational_operator)


State 65

   34 relational_operator: NOT_EQUAL •

    $default  reduce using rule 34 (relational_operator)


State 66

   35 relational_operator: LESS_EQUAL •

    $default  reduce using rule 35 (relational_operator)


State 67

   36 relational_operator: GREATER_EQUAL •

    $default  reduce using rule 36 (relational_operator)


State 68

   37 relational_operator: GREATER •

    $default  reduce using rule 37 (relational_operator)


State 69

   38 relational_operator: LESS •

    $default  reduce using rule 38 (relational_operator)


State 70

   42 expression: expression '+' • expression

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 86


State 71

   43 expression: expression '-' • expression

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 87


State 72

   44 expression: expression '*' • expression

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 88


State 73

   45 expression: expression '/' • expression

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 89


State 74

   29 condition: expression relational_operator • expression

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 90


State 75

   20 instruction: FOR '(' IDENTIFIER '=' • expression ':' expression ':' expression ')' '{' instructions '}'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 91


State 76

   21 instruction: READ '(' IDENTIFIER ')' •

    $default  reduce using rule 21 (instruction)


State 77

   27 write_params: write_params ',' • STRING_LITERAL
   28             | write_params ',' • IDENTIFIER

    STRING_LITERAL  shift, and go to state 92
    IDENTIFIER      shift, and go to state 93


State 78

   22 instruction: WRITE '(' write_params ')' •

    $default  reduce using rule 22 (instruction)


State 79

   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression
   46           | '(' expression • ')'

    ')'  shift, and go to state 82
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 80

   18 instruction: IDENTIFIER '=' expression ';' •

    $default  reduce using rule 18 (instruction)


State 81

   30 condition: '(' condition ')' •

    $default  reduce using rule 30 (condition)


State 82

   46 expression: '(' expression ')' •

    $default  reduce using rule 46 (expression)


State 83

   31 condition: condition • AND condition
   31          | condition AND condition •
   32          | condition • OR condition

    AND  shift, and go to state 61
    OR   shift, and go to state 62

    AND       [reduce using rule 31 (condition)]
    OR        [reduce using rule 31 (condition)]
    $default  reduce using rule 31 (condition)


State 84

   31 condition: condition • AND condition
   32          | condition • OR condition
   32          | condition OR condition •

    AND  shift, and go to state 61
    OR   shift, and go to state 62

    AND       [reduce using rule 32 (condition)]
    OR        [reduce using rule 32 (condition)]
    $default  reduce using rule 32 (condition)


State 85

   19 instruction: IF '(' condition ')' '{' • instructions '}' else_part

    $default  reduce using rule 16 (instructions)

    instructions  go to state 94


State 86

   42 expression: expression • '+' expression
   42           | expression '+' expression •
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    '+'       [reduce using rule 42 (expression)]
    '-'       [reduce using rule 42 (expression)]
    '*'       [reduce using rule 42 (expression)]
    '/'       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


State 87

   42 expression: expression • '+' expression
   43           | expression • '-' expression
   43           | expression '-' expression •
   44           | expression • '*' expression
   45           | expression • '/' expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    '+'       [reduce using rule 43 (expression)]
    '-'       [reduce using rule 43 (expression)]
    '*'       [reduce using rule 43 (expression)]
    '/'       [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


State 88

   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   44           | expression '*' expression •
   45           | expression • '/' expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    '+'       [reduce using rule 44 (expression)]
    '-'       [reduce using rule 44 (expression)]
    '*'       [reduce using rule 44 (expression)]
    '/'       [reduce using rule 44 (expression)]
    $default  reduce using rule 44 (expression)


State 89

   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression
   45           | expression '/' expression •

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    '+'       [reduce using rule 45 (expression)]
    '-'       [reduce using rule 45 (expression)]
    '*'       [reduce using rule 45 (expression)]
    '/'       [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


State 90

   29 condition: expression relational_operator expression •
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 29 (condition)


State 91

   20 instruction: FOR '(' IDENTIFIER '=' expression • ':' expression ':' expression ')' '{' instructions '}'
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    ':'  shift, and go to state 95
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 92

   27 write_params: write_params ',' STRING_LITERAL •

    $default  reduce using rule 27 (write_params)


State 93

   28 write_params: write_params ',' IDENTIFIER •

    $default  reduce using rule 28 (write_params)


State 94

   17 instructions: instructions • instruction
   19 instruction: IF '(' condition ')' '{' instructions • '}' else_part

    IF          shift, and go to state 27
    FOR         shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '}'         shift, and go to state 96

    instruction  go to state 33


State 95

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' • expression ':' expression ')' '{' instructions '}'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 97


State 96

   19 instruction: IF '(' condition ')' '{' instructions '}' • else_part

    ELSE  shift, and go to state 98

    $default  reduce using rule 23 (else_part)

    else_part  go to state 99


State 97

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression • ':' expression ')' '{' instructions '}'
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    ':'  shift, and go to state 100
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 98

   24 else_part: ELSE • '{' instructions '}'

    '{'  shift, and go to state 101


State 99

   19 instruction: IF '(' condition ')' '{' instructions '}' else_part •

    $default  reduce using rule 19 (instruction)


State 100

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' • expression ')' '{' instructions '}'

    INTEGER_CONSTANT  shift, and go to state 45
    FLOAT_CONSTANT    shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    '('               shift, and go to state 56

    expression  go to state 102


State 101

   24 else_part: ELSE '{' • instructions '}'

    $default  reduce using rule 16 (instructions)

    instructions  go to state 103


State 102

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' expression • ')' '{' instructions '}'
   42 expression: expression • '+' expression
   43           | expression • '-' expression
   44           | expression • '*' expression
   45           | expression • '/' expression

    ')'  shift, and go to state 104
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 103

   17 instructions: instructions • instruction
   24 else_part: ELSE '{' instructions • '}'

    IF          shift, and go to state 27
    FOR         shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '}'         shift, and go to state 105

    instruction  go to state 33


State 104

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' expression ')' • '{' instructions '}'

    '{'  shift, and go to state 106


State 105

   24 else_part: ELSE '{' instructions '}' •

    $default  reduce using rule 24 (else_part)


State 106

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' expression ')' '{' • instructions '}'

    $default  reduce using rule 16 (instructions)

    instructions  go to state 107


State 107

   17 instructions: instructions • instruction
   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' expression ')' '{' instructions • '}'

    IF          shift, and go to state 27
    FOR         shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '}'         shift, and go to state 108

    instruction  go to state 33


State 108

   20 instruction: FOR '(' IDENTIFIER '=' expression ':' expression ':' expression ')' '{' instructions '}' •

    $default  reduce using rule 20 (instruction)
